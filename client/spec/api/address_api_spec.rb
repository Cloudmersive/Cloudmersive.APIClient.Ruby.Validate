=begin
#validateapi

#The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudmersiveValidateApiClient::AddressApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'AddressApi' do
  before do
    # run before each test
    @instance = CloudmersiveValidateApiClient::AddressApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of AddressApi' do
    it 'should create an instance of AddressApi' do
      expect(@instance).to be_instance_of(CloudmersiveValidateApiClient::AddressApi)
    end
  end

  # unit tests for address_check_eu_membership
  # Check if a country is a member of the European Union (EU)
  # Checks if the input country is a member of the European Union or not.
  # @param input Input request
  # @param [Hash] opts the optional parameters
  # @return [ValidateCountryResponse]
  describe 'address_check_eu_membership test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for address_country
  # Validate and normalize country information, return ISO 3166-1 country codes and country name
  # Validates and normalizes country information, and returns key information about a country, as well as whether it is a member of the European Union.  Also returns distinct time zones in the country.
  # @param input Input request
  # @param [Hash] opts the optional parameters
  # @return [ValidateCountryResponse]
  describe 'address_country test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for address_country_list
  # Get a list of ISO 3166-1 countries
  # Enumerates the list of ISO 3166-1 countries, including name, country codes, and more.
  # @param [Hash] opts the optional parameters
  # @return [CountryListResult]
  describe 'address_country_list test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for address_get_country_currency
  # Get the currency of the input country
  # Gets the currency information for the input country, including the ISO three-letter country code, currency symbol, and English currency name.
  # @param input Input request
  # @param [Hash] opts the optional parameters
  # @return [ValidateCountryResponse]
  describe 'address_get_country_currency test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for address_get_timezone
  # Gets IANA/Olsen time zones for a country
  # Gets the IANA/Olsen time zones for a country.
  # @param input Input request
  # @param [Hash] opts the optional parameters
  # @return [GetTimezonesResponse]
  describe 'address_get_timezone test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for address_parse_string
  # Parse an unstructured input text string into an international, formatted address
  # Uses machine learning and Natural Language Processing (NLP) to handle a wide array of cases, including non-standard and unstructured address strings across a wide array of countries and address formatting norms.
  # @param input Input parse request
  # @param [Hash] opts the optional parameters
  # @return [ParseAddressResponse]
  describe 'address_parse_string test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for address_validate_address
  # Validate a street address
  # Determines if an input structured street address is valid or invalid.  If the address is valid, also returns the latitude and longitude of the address.  Supports all major international addresses.
  # @param input Input parse request
  # @param [Hash] opts the optional parameters
  # @return [ValidateAddressResponse]
  describe 'address_validate_address test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for address_validate_city
  # Validate a City and State/Province combination, get location information about it
  # Checks if the input city and state name or code is valid, and returns information about it such as normalized City name, State name and more.  Supports all major international addresses.
  # @param input Input parse request
  # @param [Hash] opts the optional parameters
  # @return [ValidateCityResponse]
  describe 'address_validate_city test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for address_validate_postal_code
  # Validate a postal code, get location information about it
  # Checks if the input postal code is valid, and returns information about it such as City, State and more.  Supports all major countries.
  # @param input Input parse request
  # @param [Hash] opts the optional parameters
  # @return [ValidatePostalCodeResponse]
  describe 'address_validate_postal_code test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for address_validate_state
  # Validate a state or province, name or abbreviation, get location information about it
  # Checks if the input state name or code is valid, and returns information about it such as normalized State name and more.  Supports all major countries.
  # @param input Input parse request
  # @param [Hash] opts the optional parameters
  # @return [ValidateStateResponse]
  describe 'address_validate_state test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
