=begin
#validateapi

#The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudmersiveValidateApiClient::DateTimeApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DateTimeApi' do
  before do
    # run before each test
    @instance = CloudmersiveValidateApiClient::DateTimeApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DateTimeApi' do
    it 'should create an instance of DateTimeApi' do
      expect(@instance).to be_instance_of(CloudmersiveValidateApiClient::DateTimeApi)
    end
  end

  # unit tests for date_time_get_now_simple
  # Get current date and time as of now
  # Gets the current date and time.  Response time is syncronized with atomic clocks, and represents a monotonic, centrally available, consistent clock.
  # @param [Hash] opts the optional parameters
  # @return [DateTimeNowResult]
  describe 'date_time_get_now_simple test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for date_time_get_public_holidays
  # Get public holidays in the specified country and year
  # Enumerates all public holidays in a given country for a given year.  Supports over 100 countries.
  # @param input Input request
  # @param [Hash] opts the optional parameters
  # @return [PublicHolidaysResponse]
  describe 'date_time_get_public_holidays test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for date_time_parse_natural_language_date_time
  # Parses a free-form natural language date and time string into a date and time
  # Parses an unstructured, free-form, natural language date and time string into a date time object.  This is intended for lightweight human-entered input, such as \&quot;tomorrow at 3pm\&quot; or \&quot;tuesday\&quot;.
  # @param input Input request
  # @param [Hash] opts the optional parameters
  # @return [DateTimeStandardizedParseResponse]
  describe 'date_time_parse_natural_language_date_time test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for date_time_parse_standard_date_time
  # Parses a standardized date and time string into a date and time
  # Parses a structured date and time string into a date time object.  This is intended for standardized date strings that adhere to formatting conventions, rather than natural language input.
  # @param input Input request
  # @param [Hash] opts the optional parameters
  # @return [DateTimeStandardizedParseResponse]
  describe 'date_time_parse_standard_date_time test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
