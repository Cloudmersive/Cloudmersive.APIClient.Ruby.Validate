=begin
#validateapi

#The validation APIs help you validate data. Check if an E-mail address is real. Check if a domain is real. Check up on an IP address, and even where it is located. All this and much more is available in the validation API.

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for CloudmersiveValidateApiClient::EmailApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'EmailApi' do
  before do
    # run before each test
    @instance = CloudmersiveValidateApiClient::EmailApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of EmailApi' do
    it 'should create an instance of EmailApi' do
      expect(@instance).to be_instance_of(CloudmersiveValidateApiClient::EmailApi)
    end
  end

  # unit tests for email_address_get_servers
  # Partially check whether an email address is valid
  # Validate an email address by identifying whether its parent domain has email servers defined.  This call is less limited than syntaxOnly but not as comprehensive as address/full.
  # @param email Email address to validate, e.g. \&quot;support@cloudmersive.com\&quot;.    The input is a string so be sure to enclose it in double-quotes.
  # @param [Hash] opts the optional parameters
  # @return [AddressGetServersResponse]
  describe 'email_address_get_servers test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for email_full_validation
  # Fully validate an email address
  # Performs a full validation of the email address.  Checks for syntactic correctness, identifies the mail server in question if any, and then contacts the email server to validate the existence of the account - without sending any emails.
  # @param email Email address to validate, e.g. \&quot;support@cloudmersive.com\&quot;.    The input is a string so be sure to enclose it in double-quotes.
  # @param [Hash] opts the optional parameters
  # @return [FullEmailValidationResponse]
  describe 'email_full_validation test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for email_post
  # Validate email adddress for syntactic correctness only
  # Validate whether a given email address is syntactically correct via a limited local-only check.  Use the address/full API to do a full validation.
  # @param value Email address to validate, e.g. \&quot;support@cloudmersive.com\&quot;.    The input is a string so be sure to enclose it in double-quotes.
  # @param [Hash] opts the optional parameters
  # @return [AddressVerifySyntaxOnlyResponse]
  describe 'email_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
